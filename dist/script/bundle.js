(()=>{"use strict";fetch("../src/text/mostCommonEnglishVerbs.txt").then((t=>t.text())).then((t=>console.log(t.replace(/\r\n|\n|\r/gm,",").split(",")))),document.querySelector("#createListButton").addEventListener("click",(()=>{let t;t=document.querySelector("#textImputArea").value;const e=function(t,e){const n=[];for(let t of e)t[1]>=3&&n.push(t);return n}(0,function(t){const e=new Map;for(let n of t)e.has(n)?e.set(n,e.get(n)+1):e.set(n,1);return Array.from(e)}(function(t){const e=[];for(let n of t)n.length>1&&e.push(n);return e}(function(t){const e=[];for(let n of t){const t=n.replace(/[\.,-\/#!\[\]\"\'\”\„$%\^&\*;:{}=\-_`~()@\+\?><\[\]\+]/g,"").replace(/\s{2,}/g," ");e.push(t)}return e}(function(t){return t.split(" ")}(t)))));console.log(e.sort(((t,e)=>e[1]-t[1])))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,