(()=>{"use strict";function e(e){return e.checked?"extract":"notExtract"}function C(e,C){return e.split(C)}function t(e){const C=[];for(let t of e){const e=t.replace(/[\.,\/#!\[\]\"\'\”\„$%\^&\*;:{}=\_`~()@\+\?><\[\]\+]/g,"").replace(/\s{2,}/g," ");C.push(e)}return C}function X(e){const C=[];for(let t of e)t.length>1&&C.push(t);return C}function n(e){const C=[];for(let t of e)t!==(+t).toString()&&C.push(t);return C}function I(e){const C=[];for(let t of e)"s"!==t[t.length-1]?C.push(t):e.includes(t.substr(0,t.length-1))?C.push(t.substr(0,t.length-1)):C.push(t);return C}const s=C("be,are,is,was,were,being,been,have,has,had,having,ve do,does,doing,did,done would, will,will,willing,would, can,can,could, couldn,couth know,knows,knowing,knew,known see,sees,seeing,saw,seen may,may,might, should, get,gets,getting,got,got think,thinks,thinking,thought,thought go,goes,going,went,gone re, make,makes,making,made,made must, take,takes,taking,took,taken come,comes,coming,came connect connecting connected come say,says,saying,said,said put,puts,putting,put,put want,wants,wanting,wanted,wanted give,gives,giving,gave,given look,looks,looking,looked,looked find,finds,finding,found,found need,needs,needing,needed,needed like,likes,liking,liked,liked set,sets,setting,set,set use,uses,using,used,used become,becomes,becoming,became,become tell,tells,telling,told,told keep,keeps,keeping,kept,kept help,helps,helping,helped,helped work,works,working,worked,worked let,lets,letting,let,let feel,feels,feeling,felt,felt provide,provides,providing,provided,provided believe,believes,believing,believed,believed try,tries,trying,tried,tried shall,shall,should, ask,asks,asking,asked,asked remember,remembers,remembering,remembered,remembered leave,leaves,leaving,left,left show,shows,showing,showed,shown pay,pays,paying,paid,paid run,runs,running,ran,run read,reads,reading,read,read seem,seems,seeming,seemed,seemed include,includes,including,included,included bring,brings,bringing,brought,brought understand,understands,understanding,understood,understood start,starts,starting,started,started play,plays,playing,played,played cut,cuts,cutting,cut,cut live,lives,living,lived,lived meet,meets,meeting,met,met move,moves,moving,moved,moved hear,hears,hearing,heard,heard call,calls,calling,called,called stop,stops,stopping,stopped,stopped turn,turns,turning,turned,turned talk,talks,talking,talked,talked buy,buys,buying,bought,bought thank,thanks,thanking,thanked,thanked change,changes,changing,changed,changed continue,continues,continuing,continued,continued consider,considers,considering,considered,considered allow,allows,allowing,allowed,allowed hope,hopes,hoping,hoped,hoped produce,produces,producing,produced,produced stay,stays,staying,stayed,stayed appear,appears,appearing,appeared,appeared write,writes,writing,wrote,written hold,holds,holding,held,held expect,expects,expecting,expected,expected ensure,ensures,ensuring,ensured,ensured suppose,supposes,supposing,supposed,supposed wish,wishes,wishing,wished,wished carry,carries,carrying,carried,carried follow,follows,following,followed,followed offer,offers,offering,offered,offered support,supports,supporting,supported,supported accept,accepts,accepting,accepted,accepted speak,speaks,speaking,spoke,spoken lead,leads,leading,leaded,leaded remain,remains,remaining,remained,remained stand,stands,standing,stood,stood suggest,suggests,suggesting,suggested,suggested hit,hits,hitting,hit,hit develop,develops,developing,developed,developed happen,happens,happening,happened,happened sit,sits,sitting,sat,sat win,wins,winning,won,won love,loves,loving,loved,loved add,adds,adding,added,added learn,learns,learning,learned,learned create,creates,creating,created,created let, agree,agrees,agreeing,agreed,agreed apply,applies,applying,applied,applied wait,waits,waiting,waited,waited avoid,avoids,avoiding,avoided,avoided send,sends,sending,sent,sent form,forms,forming,formed,formed explain,explains,explaining,explained,explained return,returns,returning,returned,returned sell,sells,selling,sold,sold receive,receives,receiving,received,received open,opens,opening,opened,opened begin,begins,beginning,began,begun eat,eats,eating,ate,eaten increase,increases,increasing,increased,increased voice,voices,voicing,voiced,voiced spend,spends,spending,spent,spent join,joins,joining,joined,joined reduce,reduces,reducing,reduced,reduced save,saves,saving,saved,saved require,requires,requiring,required,required fall,falls,falling,fell,fallen mind,minds,minding,minded,minded build,builds,building,built,built,achieve,achieves,achieving,achieved,achieved choose,chooses,choosing,chose,chosen prevent,prevents,preventing,prevented,prevented reach,reaches,reaching,reached,reached decide,decides,deciding,decided,decided deal,deals,dealing,dealt,dealt face,faces,facing,faced,faced enjoy,enjoys,enjoying,enjoyed,enjoyed watch,watches,watching,watched,watched lose,loses,losing,lost,lost walk,walks,walking,walked,walked cover,covers,covering,covered,covered improve,improves,improving,improved,improved tend,tends,tending,tended,tended raise,raises,raising,raised,raised draw,draws,drawing,drew,drawn forget,forgets,forgetting,forgot,forgotten imagine,imagines,imagining,imagined,imagined act,acts,acting,acted,acted pick,picks,picking,picked,picked cause,causes,causing,caused,caused cost,costs,costing,cost,cost pass,passes,passing,passed,passed break,breaks,breaking,broke,broken prove,proves,proving,proved,proved occur,occurs,occurring,occurred,occurred discuss,discusses,discussing,discussed,discussed listen,listens,listening,listened,listened maintain,maintains,maintaining,maintained,maintained end,ends,ending,ended,ended exist,exists,existing,existed,existed seek,seeks,seeking,sought,sought grow,grows,growing,grew,grown check,checks,checking,checked,checked serve,serves,serving,served,served share,shares,sharing,shared,shared establish,establishes,establishing,established,established enter,enters,entering,entered,entered control,controls,controlling,controlled,controlled die,dies,dying,died,died encourage,encourages,encouraging,encouraged,encouraged answer,answers,answering,answered,answered protect,protects,protecting,protected,protected identify,identifies,identifying,identified,identified visit,visits,visiting,visited,visited care,cares,caring,cared,cared enable,enables,enabling,enabled,enabled affect,affects,affecting,affected,affected claim,claims,claiming,claimed,claimed note,notes,noting,noted,noted obtain,obtains,obtaining,obtained,obtained represent,represents,representing,represented,represented contain,contains,containing,contained,contained beat,beats,beating,beat,beaten spread,spreads,spreading,spread,spread worry,worries,worrying,worried,worried bear,bears,bearing,beared,beared shut,shuts,shutting,shut,shut wonder,wonders,wondering,wondered,wondered afford,affords,affording,afforded,afforded fit,fits,fitting,fitted,fitted kill,kills,killing,killed,killed regard,regards,regarding,regarded,regarded describe,describes,describing,described,described place,places,placing,placed,placed drive,drives,driving,drove,driven wear,wears,wearing,wore,worn argue,argues,arguing,argued,argued involve,involves,involving,involved,involved lie,lies,lying,lay,lain contact,contacts,contacting,contacted,contacted catch,catches,catching,caught,caught assume,assumes,assuming,assumed,assumed indicate,indicates,indicating,indicated,indicated operate,operates,operating,operated,operated manage,manages,managing,managed,managed cope,copes,coping,coped,coped remove,removes,removing,removed,removed determine,determines,determining,determined,determined fight,fights,fighting,fought,fought pull,pulls,pulling,pulled,pulled realise,realises,realising,realised,realised reflect,reflects,reflecting,reflected,reflected fill,fills,filling,filled,filled refer,refers,referring,referred,referred gain,gains,gaining,gained,gained examine,examines,examining,examined,examined prefer,prefers,preferring,preferred,preferred travel,travels,travelling,travelled,travelled admit,admits,admitting,admitted,admitted recognise,recognises,recognising,recognised,recognised attend,attends,attending,attended,attended hurt,hurts,hurting,hurt,hurt respond,responds,responding,responded,responded sleep,sleeps,sleeping,slept,slept introduce,introduces,introducing,introduced,introduced depend,depends,depending,depended,depended survive,survives,surviving,survived,survived suffer,suffers,suffering,suffered,suffered notice,notices,noticing,noticed,noticed close,closes,closing,cannot,closed,closed result,results,resulting,resulted,resulted replace,replaces,replacing,replaced,replaced complete,completes,completing,completed,completed miss,misses,missing,missed,missed rise,rises,rising,rose,risen present,presents,presenting,presented,presented arise,arises,arising,arose,arisen point,points,pointing,pointed,pointed fail,fails,failing,failed,failed promote,promotes,promoting,promoted,promoted perform,performs,performing,performed,performed discover,discovers,discovering,discovered,discovered express,expresses,expressing,expressed,expressed extend,extends,extending,extended,extended drink,drinks,drinking,drank,drunk mention,mentions,mentioning,mentioned,mentioned vary,varies,varying,varied,varied concentrate,concentrates,concentrating,concentrated,concentrated benefit,benefits,benefiting,benefited,benefited treat,treats,treating,treated,treated hang,hangs,hanging,hung,hung throw,throws,throwing,threw,thrown prepare,prepares,preparing,prepared,prepared drop,drops,dropping,dropped,dropped study,studies,studying,studied,studied push,pushes,pushing,pushed,pushed press,presses,pressing,pressed,pressed report,reports,reporting,reported,reported cast,casts,casting,cast,cast arrive,arrives,arriving,arrived,arrived sound,sounds,sounding,sounded,sounded finish,finishes,finishing,finished,finished,feed,feeds,feeding,fed,ring,rings,ringing,ringed,ringed test,tests,testing,tested,tested secure,secures,securing,secured,secured collect,collects,collecting,collected,collected escape,escapes,escaping,escaped,escaped teach,teaches,teaching,taught,taught last,lasts,lasting,lasted,lasted welcome,welcomes,welcoming,welcomed,welcomed rely,relies,relying,relied,relied trust,trusts,trusting,trusted,trusted match,matches,matching,matched,matched assess,assesses,assessing,assessed,assessed contribute,contributes,contributing,contributed,contributed repeat,repeats,repeating,repeated,repeated supply,supplies,supplying,supplied,supplied wan, plan,plans,planning,planned,planned reveal,reveals,revealing,revealed,revealed lie lied lay lain laid state,states,stating,stated,statedconfirm,confirms,confirming,confirmed,confirmed,appreciate,appreciates,appreciating,appreciated,appreciated hate,hates,hating,hated,hated relate,relates,relating,related,related overcome,overcomes,overcoming,overcame,overcome",/[\s,]+/),r=C("time, sun mon tue tues wed thu thur thurs fri sat summer winter autumn fall spring Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec data Monday Tuesday Wednesday Thursday Friday Saturday Sunday January February March April June July August September October November December year month day people, way, year, work, government, day, man,men world, life,lives part, house,houses course, case, system, place, end, group, company,companies party,parties information,informations school, fact, money,moneys point, example, state, business,businesses night, area,areas water, half, halves, thing, family,families head, hand, order, john, side, home, week, power, country,countries use, room, problem,problems lot, a,aes war, police, interest,interests car, law,laws road, form, face, education, research,researches sort, office, body,bodies person,persons health,healths mother, question, period, name, book, level, child,children control, society,societies view, door, line, community,communities south, product city,cities god, father, centre,centres effect, staff,staffs position, kind, job, woman,women action, act, process,processes health north, age, idea,ideas west, hight, support, moment, sense, report, mind, church,churches morning, death, change, land, care, century,centuries range, table, back, trade, history,histories study,studies street, rate, word, food,foods matter text event language, experience, result, team, other, sir,sirs section, programme, air, role, reason, price, town, class,classes nature, subject, bank, member, value, need, east, practice,practices type, paper, date, decision, figure, right, wife,wives president, university,universities friend, club, quality,qualities voice, lord, stage, king, us, situation, light, tax,taxes production, march,marches art, board, may, hospital, month, music,musics cost, field, award, issue, bed, project, number, chapter, girl, game, amount, basis,bases knowledge,knowledges approach,approaches series,series love, top, news, front, future, labor account, computer, security,securities rest, labour, structure, hair, bill, heart, force, attention, movement, success,successes letter, agreement, analysis,analyses population, mean, meant, behavior performance, page model, material, theory,theories growth, fire, chance, boy, relationship, son, sea, record, size, property, risk, properties space, term, bind, bound, director, plan, behaviour,behaviours treatment, energy,energies st, peter, income, cup, scheme, design, response, association, choice, pressure,",/[\s,]+/),i=C("worst new newest newer present more most poor poorer poorest wrong wronger wrongest natural easy easier easiest simple possible simpler serious strong sharp, sharper sharpest clear clearer clearest more full great recent greater greatest simplest individual current currenter effective dangerous different healthy, high, higher,highest healthier healthiest safe, safer safest currentest brown yellow slight slighter slightest major exact quick few fewer fewest quicker quickest big bigger biggest pink fast faster fastest careful blue green direct free public necessary immediate large, larger able largest red normal close closer closest nice nicer nicest modern moderner good  better similar low lower lowest long longer shorter short shortest longest best able wide wider widest empty",/[\s,]+/),a=C("I we you he she it they me us you her him it them mine ours yours hers his its theirs my our your her his their myself yourself herself himself itself ourselves yourselves themselves myself yourself herself himself itself ourselves yourselves themselves all another any anybody anyone anything both each either everybody everyone everything few many most neither nobody none no one nothing one other others several some somebody someone something interesting such such that these this those what whatever which why where whichever who whoever whom whomever whose as that what whatever whether whichever who whoever whom whomever whose",/[\s,]+/),o=C("minute the later accordingly actually after time afterwards also and another as an example consequence result soon at last lenght because because of this before besides briefly but bonsequently conversely equally finally first example although instance this purpose for though reason fourth from here on further furthermore gradually hence however addition in conclusion contrast fact short spite summary end meanwhile meantime way just important least last of all lastly later meanwhile moreover nevertheless next nonetheless now nor equal importance contrary following hand or presently second similarly since so soon still subsequently such week then thereafter therefore third thus specific begin illustrate repeat sum up too ultimately what whatever whoever whereas whomever when while with  mind yet",/[\s,]+/),d=C("one two three four five six seven eight nine ten",/[\s,]+/),l=C(" the according ie nt only recently off well beyond etc almost sometimes until without never away there over behind main an out again to from by not nt sure down into otherwise towards enough whole among extent prior alone together single during unless between every except against less very vs even across already towards notwithstanding apart anti co always please various how once twice overall up yes no usually rarely under if same within upon much many little often ever than",/[\s,]+/),c=C("I II III IV V VI VII VIII IX X XI XII XIII XIV XV XVI XVII XVIII XIX XX XXI XXII XXIII XXIV XXV XXVI XXVII XXVIII XXIX XXX XXXI XXXII XXXIII XXXIV XXXV XXXVI XXXVII XXXVIII XXXIX XL XLI XLII XLIII XLIV XLV XLVI XLVII XLVIII XLIX L LI LII LIII LIV LV LVI LVII LVIII LIX LX LXI LXII LXIII LXIV LXV LXVI LXVII LXVIII LXIX LXX LXXI LXXII LXXIII LXXIV LXXV LXXVI LXXVII LXXVIII LXXIX LXXX LXXXI LXXXII LXXXIII LXXXIV LXXXV LXXXVI LXXXVII LXXXVIII LXXXIX XC XCI XCII XCIII XCIV XCV XCVI XCVII XCVIII XCIX C CI CII CIII CIV CV CVI CVII CVIII CIX CX CXI CXII CXIII CXIV CXV CXVI CXVII CXVIII CXIX CXX CXXI CXXII CXXIII CXXIV CXXV CXXVI CXXVII CXXVIII CXXIX CXXX CXXXI CXXXII CXXXIII CXXXIV CXXXV CXXXVI CXXXVII CXXXVIII CXXXIX CXL CXLI CXLII CXLIII CXLIV CXLV CXLVI CXLVII CXLVIII CXLIX CL CLI CLII CLIII CLIV CLV CLVI CLVII CLVIII CLIX CLX CLXI CLXII CLXIII CLXIV CLXV CLXVI CLXVII CLXVIII CLXIX CLXX CLXXI CLXXII CLXXIII CLXXIV CLXXV CLXXVI CLXXVII CLXXVIII CLXXIX CLXXX CLXXXI CLXXXII CLXXXIII CLXXXIV CLXXXV CLXXXVI CLXXXVII CLXXXVIII CLXXXIX CXC CXCI CXCII CXCIII CXCIV CXCV CXCVI CXCVII CXCVIII CXCIX CC CCI CCII CCIII CCIV CCV CCVI CCVII CCVIII CCIX CCX CCXI CCXII CCXIII CCXIV CCXV CCXVI CCXVII CCXVIII CCXIX CCXX CCXXI CCXXII CCXXIII CCXXIV CCXXV CCXXVI CCXXVII CCXXVIII CCXXIX CCXXX CCXXXI CCXXXII CCXXXIII CCXXXIV CCXXXV CCXXXVI CCXXXVII CCXXXVIII CCXXXIX CCXL CCXLI CCXLII CCXLIII CCXLIV CCXLV CCXLVI CCXLVII CCXLVIII CCXLIX CCL CCLI CCLII CCLIII CCLIV CCLV CCLVI CCLVII CCLVIII CCLIX CCLX CCLXI CCLXII CCLXIII CCLXIV CCLXV CCLXVI CCLXVII CCLXVIII CCLXIX CCLXX CCLXXI CCLXXII CCLXXIII CCLXXIV CCLXXV CCLXXVI CCLXXVII CCLXXVIII CCLXXIX CCLXXX CCLXXXI CCLXXXII CCLXXXIII CCLXXXIV CCLXXXV CCLXXXVI CCLXXXVII CCLXXXVIII CCLXXXIX CCXC CCXCI CCXCII CCXCIII CCXCIV CCXCV CCXCVI CCXCVII CCXCVIII CCXCIX CCC CCCI CCCII CCCIII CCCIV CCCV CCCVI CCCVII CCCVIII CCCIX CCCX CCCXI CCCXII CCCXIII CCCXIV CCCXV CCCXVI CCCXVII CCCXVIII CCCXIX CCCXX CCCXXI CCCXXII CCCXXIII CCCXXIV CCCXXV CCCXXVI CCCXXVII CCCXXVIII CCCXXIX CCCXXX CCCXXXI CCCXXXII CCCXXXIII CCCXXXIV CCCXXXV CCCXXXVI CCCXXXVII CCCXXXVIII CCCXXXIX CCCXL CCCXLI CCCXLII CCCXLIII CCCXLIV CCCXLV CCCXLVI CCCXLVII CCCXLVIII CCCXLIX CCCL CCCLI CCCLII CCCLIII CCCLIV CCCLV CCCLVI CCCLVII CCCLVIII CCCLIX CCCLX CCCLXI CCCLXII CCCLXIII CCCLXIV CCCLXV CCCLXVI CCCLXVII CCCLXVIII CCCLXIX CCCLXX CCCLXXI CCCLXXII CCCLXXIII CCCLXXIV CCCLXXV CCCLXXVI CCCLXXVII CCCLXXVIII CCCLXXIX CCCLXXX CCCLXXXI CCCLXXXII CCCLXXXIII CCCLXXXIV CCCLXXXV CCCLXXXVI CCCLXXXVII CCCLXXXVIII CCCLXXXIX CCCXC CCCXCI CCCXCII CCCXCIII CCCXCIV CCCXCV CCCXCVI CCCXCVII CCCXCVIII CCCXCIX CD CDI CDII CDIII CDIV CDV CDVI CDVII CDVIII CDIX CDX CDXI CDXII CDXIII CDXIV CDXV CDXVI CDXVII CDXVIII CDXIX CDXX CDXXI CDXXII CDXXIII CDXXIV CDXXV CDXXVI CDXXVII CDXXVIII CDXXIX CDXXX CDXXXI CDXXXII CDXXXIII CDXXXIV CDXXXV CDXXXVI CDXXXVII CDXXXVIII CDXXXIX CDXL CDXLI CDXLII CDXLIII CDXLIV CDXLV CDXLVI CDXLVII CDXLVIII CDXLIX CDL CDLI CDLII CDLIII CDLIV CDLV CDLVI CDLVII CDLVIII CDLIX CDLX CDLXI CDLXII CDLXIII CDLXIV CDLXV CDLXVI CDLXVII CDLXVIII CDLXIX CDLXX CDLXXI CDLXXII CDLXXIII CDLXXIV CDLXXV CDLXXVI CDLXXVII CDLXXVIII CDLXXIX CDLXXX CDLXXXI CDLXXXII CDLXXXIII CDLXXXIV CDLXXXV CDLXXXVI CDLXXXVII CDLXXXVIII CDLXXXIX CDXC CDXCI CDXCII CDXCIII CDXCIV CDXCV CDXCVI CDXCVII CDXCVIII CDXCIX D DI DII DIII DIV DV DVI DVII DVIII DIX DX DXI DXII DXIII DXIV DXV DXVI DXVII DXVIII DXIX DXX DXXI DXXII DXXIII DXXIV DXXV DXXVI DXXVII DXXVIII DXXIX DXXX DXXXI DXXXII DXXXIII DXXXIV DXXXV DXXXVI DXXXVII DXXXVIII DXXXIX DXL DXLI DXLII DXLIII DXLIV DXLV DXLVI DXLVII DXLVIII DXLIX DL DLI DLII DLIII DLIV DLV DLVI DLVII DLVIII DLIX DLX DLXI DLXII DLXIII DLXIV DLXV DLXVI DLXVII DLXVIII DLXIX DLXX DLXXI DLXXII DLXXIII DLXXIV DLXXV DLXXVI DLXXVII DLXXVIII DLXXIX DLXXX DLXXXI DLXXXII DLXXXIII DLXXXIV DLXXXV DLXXXVI DLXXXVII DLXXXVIII DLXXXIX DXC DXCI DXCII DXCIII DXCIV DXCV DXCVI DXCVII DXCVIII DXCIX DC DCI DCII DCIII DCIV DCV DCVI DCVII DCVIII DCIX DCX DCXI DCXII DCXIII DCXIV DCXV DCXVI DCXVII DCXVIII DCXIX DCXX DCXXI DCXXII DCXXIII DCXXIV DCXXV DCXXVI DCXXVII DCXXVIII DCXXIX DCXXX DCXXXI DCXXXII DCXXXIII DCXXXIV DCXXXV DCXXXVI DCXXXVII DCXXXVIII DCXXXIX DCXL DCXLI DCXLII DCXLIII DCXLIV DCXLV DCXLVI DCXLVII DCXLVIII DCXLIX DCL DCLI DCLII DCLIII DCLIV DCLV DCLVI DCLVII DCLVIII DCLIX DCLX DCLXI DCLXII DCLXIII DCLXIV DCLXV DCLXVI DCLXVII DCLXVIII DCLXIX DCLXX DCLXXI DCLXXII DCLXXIII DCLXXIV DCLXXV DCLXXVI DCLXXVII DCLXXVIII DCLXXIX DCLXXX DCLXXXI DCLXXXII DCLXXXIII DCLXXXIV DCLXXXV DCLXXXVI DCLXXXVII DCLXXXVIII DCLXXXIX DCXC DCXCI DCXCII DCXCIII DCXCIV DCXCV DCXCVI DCXCVII DCXCVIII DCXCIX DCC DCCI DCCII DCCIII DCCIV DCCV DCCVI DCCVII DCCVIII DCCIX DCCX DCCXI DCCXII DCCXIII DCCXIV DCCXV DCCXVI DCCXVII DCCXVIII DCCXIX DCCXX DCCXXI DCCXXII DCCXXIII DCCXXIV DCCXXV DCCXXVI DCCXXVII DCCXXVIII DCCXXIX DCCXXX DCCXXXI DCCXXXII DCCXXXIII DCCXXXIV DCCXXXV DCCXXXVI DCCXXXVII DCCXXXVIII DCCXXXIX DCCXL DCCXLI DCCXLII DCCXLIII DCCXLIV DCCXLV DCCXLVI DCCXLVII DCCXLVIII DCCXLIX DCCL DCCLI DCCLII DCCLIII DCCLIV DCCLV DCCLVI DCCLVII DCCLVIII DCCLIX DCCLX DCCLXI DCCLXII DCCLXIII DCCLXIV DCCLXV DCCLXVI DCCLXVII DCCLXVIII DCCLXIX DCCLXX DCCLXXI DCCLXXII DCCLXXIII DCCLXXIV DCCLXXV DCCLXXVI DCCLXXVII DCCLXXVIII DCCLXXIX DCCLXXX DCCLXXXI DCCLXXXII DCCLXXXIII DCCLXXXIV DCCLXXXV DCCLXXXVI DCCLXXXVII DCCLXXXVIII DCCLXXXIX DCCXC DCCXCI DCCXCII DCCXCIII DCCXCIV DCCXCV DCCXCVI DCCXCVII DCCXCVIII DCCXCIX DCCC DCCCI DCCCII DCCCIII DCCCIV DCCCV DCCCVI DCCCVII DCCCVIII DCCCIX DCCCX DCCCXI DCCCXII DCCCXIII DCCCXIV DCCCXV DCCCXVI DCCCXVII DCCCXVIII DCCCXIX DCCCXX DCCCXXI DCCCXXII DCCCXXIII DCCCXXIV DCCCXXV DCCCXXVI DCCCXXVII DCCCXXVIII DCCCXXIX DCCCXXX DCCCXXXI DCCCXXXII DCCCXXXIII DCCCXXXIV DCCCXXXV DCCCXXXVI DCCCXXXVII DCCCXXXVIII DCCCXXXIX DCCCXL DCCCXLI DCCCXLII DCCCXLIII DCCCXLIV DCCCXLV DCCCXLVI DCCCXLVII DCCCXLVIII DCCCXLIX DCCCL DCCCLI DCCCLII DCCCLIII DCCCLIV DCCCLV DCCCLVI DCCCLVII DCCCLVIII DCCCLIX DCCCLX DCCCLXI DCCCLXII DCCCLXIII DCCCLXIV DCCCLXV DCCCLXVI DCCCLXVII DCCCLXVIII DCCCLXIX DCCCLXX DCCCLXXI DCCCLXXII DCCCLXXIII DCCCLXXIV DCCCLXXV DCCCLXXVI DCCCLXXVII DCCCLXXVIII DCCCLXXIX DCCCLXXX DCCCLXXXI DCCCLXXXII DCCCLXXXIII DCCCLXXXIV DCCCLXXXV DCCCLXXXVI DCCCLXXXVII DCCCLXXXVIII DCCCLXXXIX DCCCXC DCCCXCI DCCCXCII DCCCXCIII DCCCXCIV DCCCXCV DCCCXCVI DCCCXCVII DCCCXCVIII DCCCXCIX CM CMI CMII CMIII CMIV CMV CMVI CMVII CMVIII CMIX CMX CMXI CMXII CMXIII CMXIV CMXV CMXVI CMXVII CMXVIII CMXIX CMXX CMXXI CMXXII CMXXIII CMXXIV CMXXV CMXXVI CMXXVII CMXXVIII CMXXIX CMXXX CMXXXI CMXXXII CMXXXIII CMXXXIV CMXXXV CMXXXVI CMXXXVII CMXXXVIII CMXXXIX CMXL CMXLI CMXLII CMXLIII CMXLIV CMXLV CMXLVI CMXLVII CMXLVIII CMXLIX CML CMLI CMLII CMLIII CMLIV CMLV CMLVI CMLVII CMLVIII CMLIX CMLX CMLXI CMLXII CMLXIII CMLXIV CMLXV CMLXVI CMLXVII CMLXVIII CMLXIX CMLXX CMLXXI CMLXXII CMLXXIII CMLXXIV CMLXXV CMLXXVI CMLXXVII CMLXXVIII CMLXXIX CMLXXX CMLXXXI CMLXXXII CMLXXXIII CMLXXXIV CMLXXXV CMLXXXVI CMLXXXVII CMLXXXVIII CMLXXXIX CMXC CMXCI CMXCII CMXCIII CMXCIV CMXCV CMXCVI CMXCVII CMXCVIII CMXCIX",/[\s,]+/),u=C("PLN USD EUR GBP ft² oz cup cal inch foot mile ounce pound pounds ounces miles foots inches km dm cm mm min ml dm³ cm³ mm³ m³ kg dag",/[\s,]+/),p=function(e){const C=[];for(let t of e)"l"==t[t.length-1]&&"l"===t[t.length-2]?C.push(`${t}y`):C.push(`${t}ly`);return C}(i);!function(e){for(let C of e)"s"!==C[C.length-1]&&e.push(C+"s")}(r);const L=function(e){let C=[];for(let t=0;t<e.length;t++)C=C.concat(e[t]);return C}([s,r,i,a,o,d,p,l,c,u]);function g(e,C){const t=[];for(let X of e){const e=X.toUpperCase(),n=X.toLowerCase(),I=X.charAt(0).toUpperCase()+X.slice(1,X.length);C.includes(X)||C.includes(e)||C.includes(n)||C.includes(I)||t.push(X)}return t}function D(e){const C=new Map;for(let t of e)C.has(t)?C.set(t,C.get(t)+1):C.set(t,1);return Array.from(C)}function V(e,C){const t=[];for(let X of C)X[1]>=e&&t.push(X);return t}function h(e){return e.sort(((e,C)=>C[1]-e[1]))}function m(e,C){const t=[];for(let X of e){const e=X.split(" "),n=e[0].toUpperCase(),I=e[0].toLowerCase(),s=e[0].charAt(0).toUpperCase()+e[0].slice(1,e[0].length),r=e[e.length-1].toUpperCase(),i=e[e.length-1].toLowerCase(),a=e[e.length-1].charAt(0).toUpperCase()+e[e.length-1].slice(1,e[e.length-1].length);C.includes(n)||C.includes(I)||C.includes(s)||C.includes(a)||C.includes(i)||C.includes(r)||C.includes(r)||t.push(X)}return t}function f(e){const C=[];for(let t of e)for(let X of e)t[0]!==X[0]&&t[1]===X[1]&&t[0].includes(X[0])&&C.push(X[0]);return C}function v(e,C){const t=[];for(let X of e)C.includes(X[0])||t.push(X);return t}function w(e,I){const s=e,r=t(C(document.querySelector("#textImputArea").value,/[\s’']+/)),i=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]}`;C.push(X)}return C}(r),s);h(V(I,D(i)));const a=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]}`;C.push(X)}return C}(r),s);h(V(I,D(a)));const o=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]}`;C.push(X)}return C}(r),s);h(V(I,D(o)));const d=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]}`;C.push(X)}return C}(r),s);h(V(I,D(d)));const l=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]}`;C.push(X)}return C}(r),s);h(V(I,D(l)));const c=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]} ${e[t+6]}`;C.push(X)}return C}(r),s);h(V(I,D(c)));const u=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]} ${e[t+6]} ${e[t+7]}`;C.push(X)}return C}(r),s);h(V(I,D(u)));const p=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]} ${e[t+6]} ${e[t+7]} ${e[t+8]}`;C.push(X)}return C}(r),s);h(V(I,D(p)));const L=m(function(e){const C=[];e=X(e=n(e));for(let t=0;t<e.length;t++){let X=`${e[t]} ${e[t+1]} ${e[t+2]} ${e[t+3]} ${e[t+4]} ${e[t+5]} ${e[t+6]} ${e[t+7]} ${e[t+8]} ${e[t+9]}`;C.push(X)}return C}(r),s),g=(h(V(I,D(L))),h(V(I,D(i.concat(a,o,d,l,c,u,p,L)))));return v(g,f(g))}function y(){const e=document.querySelector(".app");e.classList.add("secondScreenApp"),e.innerHTML='<div id="textShowScreen"></div><input type="button" value="+" id="addNewTerm"><select id="whichAdditionalScreens" name="whichAdditionalScreen"><option value="examples">show example sentences</option><option value="parallelText">show a parallel text</option></select><form id="occurrenciesForm"><ul class="occurrenciesList" id="occurrenciesListNoTranslation"></ul></form><div id="parallelTextArea"><input type="button" value="accept" id="acceptParallelTextButton"><textarea placeholder="Paste a parallel text"></textarea></div><input type="button" id="downloadList" value="download a txt list">'}function b(e,C){const t=document.querySelector("#textShowScreen");let X=e;for(let e of C)X=X.replaceAll(e[0],`<span class="emphasizedWord">${e[0]}</span>`);t.innerHTML=X}function k(e,C){const t=C,X=document.querySelector("#parallelTextArea"),n=document.querySelector("#occurrenciesForm");if("parallelText"===e.value){for(let e of t)e.style.display="none";X.style.display="initial",n.style.gridColumn="span 1"}else if("examples"===e.value){for(let e of t)e.style.display="grid";X.style.display="none",n.style.gridColumn="span 2"}}function M(e){let C=0;const t=e;for(let e of t)e.querySelector(".originalWord").setAttribute("termIndex",C.toString()),e.querySelector(".translatedWord").setAttribute("termIndex",(C+t.length).toString()),C++}function x(){const e=document.querySelector("#parallelTextArea");if("TEXTAREA"===e.lastElementChild.tagName){const C=e.querySelector("textarea").value;e.innerHTML=`<input type="button" value="accept" id="acceptParallelTextButton"><div>${C}</div>`,e.style.position="sticky",e.style.top="0",e.style.minHeight="auto",e.style.maxHeight="calc(100vh - 80px)",e.querySelector('input[type="button"]').value="change parallel text",document.querySelector("#acceptParallelTextButton").addEventListener("click",x)}else"DIV"===e.lastElementChild.tagName&&(e.innerHTML='<input type="button" value="accept" id="acceptParallelTextButton"><textarea></textarea>',document.querySelector("#acceptParallelTextButton").addEventListener("click",x))}function $(e,C){const t=C.split(".");for(let C of e){const e=C.querySelector(".exampleArrowRight"),X=C.querySelector(".exampleArrowLeft"),n=C.querySelector(".originalWord"),I=[],s=C.querySelector(".exampleMain span");for(let e of t)e.includes(n.value)&&(I.includes(e.replaceAll(n.value,`<span class="emphasizedWord">${n.value}</span>`).trim()+".")||I.push(e.replaceAll(n.value,`<span class="emphasizedWord">${n.value}</span>`).trim()+"."));let r=I.indexOf(s.innerHTML);r<0&&(I[0]?s.innerHTML=I[0]:s.innerHTML='<input type="text">',r+=0),e.addEventListener("click",(()=>{I.length>1&&(r>=I.length-1?(s.innerHTML=I[0],r=0):(s.innerHTML=I[r+1]||I[0],r+=1))})),X.addEventListener("click",(()=>{I.length>1&&(0===r?(s.innerHTML=I[I.length-1]||I[0],r=I.length-1):(s.innerHTML=I[r-1]||I[0],r-=1))}))}}const q=s.concat(a,o,d,l,c,u);function E(e){e.parentElement.removeChild(e),M(document.getElementsByClassName("term"))}const S=document.querySelector("#createListButton"),A=document.querySelector("#autoextractionCheckbox");let T=e(A);const N=document.querySelector("#selectLanguage"),B=document.querySelector("#minNumOfOccurrencies");let j=+B.value;B.addEventListener("input",(()=>{j=+B.value})),A.addEventListener("input",(()=>{T=e(A)})),S.addEventListener("click",(()=>{!function(e,s,r){let i=document.querySelector("#textImputArea").value;if("extract"===r){const r=function(e){const C=[];for(let t of e)t[0]===t[0].toLowerCase()?C.push(t):e.includes(t.toLowerCase())?C.push(t.toLowerCase()):C.push(t);return C}(n(X(t(C(i,/[\s’']+/)))));let a,o=[];switch(e){case"English":o=I(r);break;default:o=I(r)}switch(e){case"English":a=g(o,L);break;default:a=g(o,L)}const d=V(s,D(a));let l=[];switch(e){case"English":l=w(q,s);break;default:l=w(q,s)}const c=l.concat(d),u=h(v(c,f(c)));y(),function(e,C){const t=document.querySelector("#occurrenciesListNoTranslation"),X=C.split(".");for(let C of e){const e=[];for(let t of X)t.includes(C[0])&&e.push(t.replaceAll(C[0],`<span class="emphasizedWord">${C[0]}</span>`)+".");t.innerHTML+=`<li class='term'><input type='text' value='${C[0]}' class='originalWord'><input type='text' class='translatedWord'><div class="deleteTerm"><span>X</span></div><div class="example"><p class="exampleArrow exampleArrowLeft"><<</p><p class='exampleMain'><span>${e[0]}</span></p><p class="exampleArrow exampleArrowRight">>></p></div></li>`}}(u,i),M(document.getElementsByClassName("term")),b(i,u)}else"notExtract"===r&&(y(),b(i,[]));const a=document.getElementsByTagName("li");$(a,i),[...document.getElementsByClassName("originalWord")].forEach((e=>{e.addEventListener("change",(()=>{$(a,i)}))}));const o=document.querySelector("#whichAdditionalScreens"),d=document.getElementsByClassName("example");k(o,d),o.addEventListener("change",(()=>{k(o,d)})),document.querySelector("#addNewTerm").addEventListener("click",(()=>{const e=document.querySelector("#occurrenciesListNoTranslation"),C=document.createElement("li");C.setAttribute("class","term"),C.innerHTML='<input type="text" class="originalWord"><input type="text" class="translatedWord"><div class="deleteTerm"><span>X</span></div><div class="example"><p class="exampleArrow exampleArrowLeft"><<</p><p class="exampleMain"><span><input type="text"></span></p><p class="exampleArrow exampleArrowRight">>></p></div>',e.insertBefore(C,e.firstElementChild),k(o,d),M(document.getElementsByClassName("term")),[...document.getElementsByClassName("originalWord")].forEach((e=>{e.addEventListener("change",(()=>{$(a,i)}))})),[...document.getElementsByClassName("deleteTerm")].forEach((e=>{e.addEventListener("click",(()=>{E(e.parentElement)}))}))})),[...document.getElementsByClassName("deleteTerm")].forEach((e=>{e.addEventListener("click",(()=>{E(e.parentElement)}))})),document.querySelector("#acceptParallelTextButton").addEventListener("click",x);const l=document.querySelector("#downloadList");null==l||l.addEventListener("click",(()=>{!function(e,C){const t=document.createElement("a");t.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(C)),t.setAttribute("download","glossary"),t.style.display="none",document.body.appendChild(t),t.click(),document.body.removeChild(t)}(0,function(){const e=document.getElementsByClassName("term");let C="";for(let t of e){const e=t.querySelector(".originalWord").value,X=t.querySelector(".translatedWord").value;""!==e.trim()&&""!==X.trim()&&(C+=`${e}\t${null==X?void 0:X.replace(" / ","\t")}\n`)}const t=C.split("\n").sort();let X="";for(let e of t)X+=`${e}\n`;return X}())}))}(N.value,j,T)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,